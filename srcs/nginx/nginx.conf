user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Preserve common proxy headers
    include /etc/nginx/proxy_params;
    # WebSocket upgrade support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Upstream services
    upstream auth_service {
        server auth_service:3000;
    }
    upstream game_service {
        # Game service listens on port 3001 inside the container
        server game_service:3001;
    }
    # User service: routes under /api/user/, container listens on port 3000
    upstream user_service {
        server user_service:3000;
    }
    upstream frontend {
        server frontend:4000;
    }
    # Tournament service: handles tournament CRUD, joins, leaves, etc.
    upstream tournament_service {
        server tournament_service:3000;
    }

    server {
        listen 80;
        # TODO rediriger 80 vers 443
        listen 443 ssl;
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # Auth service
        location /api/auth/ {
            proxy_pass http://auth_service;
        }

        # Game service API and WebSocket proxy
        # Match both the base /api/game and any subpaths
        location /api/game {
            proxy_pass http://game_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # User service API
        location /api/user/ {
            proxy_pass http://user_service;
        }
        # Tournament service API
        # All tournament-related endpoints
        location /api/tournament {
            proxy_pass http://tournament_service;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection $connection_upgrade;
        }
        location /api/tournaments {
            proxy_pass http://tournament_service;
        }

        # Game service metrics
        location /metrics {
            proxy_pass http://game_service;
        }

        # Frontend SPA (including Vite HMR WebSocket)
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}

version: "3.9"

services:
  # ──────────────────────────────────────────────────────────
  auth_service:
    container_name: auth_service
    restart: "no"
    env_file:
      - ./.env
    environment:
      - PGHOST=database
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASS}
      - PGDATABASE=${DB_NAME}
      - GOOGLE_CLIENT_ID=428358411017-tpnb2gagmtg8vve9hlahkh962d7h76hf.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      # ⇩ Quand tu passeras par Nginx, remplace localhost:3000 par ton domaine/port proxy
      # Read CALLBACK_URL from .env for HTTPS callback over the proxy
      - CALLBACK_URL=${CALLBACK_URL}
      - COOKIE_SECRET=fdaf682f5ec7571eb3dc2d08655cae7f6b7c026d8218088fc13fa2e546a084b4
      - API_CREDENTIAL=83294bb5c629d7e456e9bbed76693581304b977fce80a57a6cccf37c470a41c0
      - JWT_SECRET=e4l+2nJoNiabS7MpIYdmzHTfs0ju5iy3xgg1o48+149NeJ4PXHzoIQ21THvoTgUGXbhF6mJYSJyU0EzEEcXiuw==
      - PGPORT=5432
      - NODE_ENV=dev
      - PORT=3000
    build:
      context: ./backend/auth_service
      dockerfile: Dockerfile
      args:
        - NODE_ENV=dev
    expose:
      - "3000"              # ▶ visible uniquement dans le réseau Docker
    ports:
      - "3000:3000"        # ▶ mappe le port interne pour tests locaux via localhost
    depends_on:
      - user_service
    networks:
      - router

  # ──────────────────────────────────────────────────────────
  game_service:
    container_name: game_service
    restart: "no"
    environment:
      - PGHOST=database
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASS}
      - PGDATABASE=${DB_NAME}
      - PGPORT=5432
      - NODE_ENV=dev
      # Ensure Fastify listens on 3001 to match Dockerfile
      - PORT=3001
    build:
      context: ./backend/game_service
      dockerfile: Dockerfile
      args:
        - NODE_ENV=dev
    ports:
      - "3001:3000"
    networks:
      - router

  # ──────────────────────────────────────────────────────────
  user_service:
    container_name: user_service
    restart: "no"
    env_file:
      - ./.env
    environment:
      - PGHOST=database
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASS}
      - PGDATABASE=${DB_NAME}
      - PGPORT=5432
      - NODE_ENV=dev
      - PORT=3001
    build:
      context: ./backend/user_service
      dockerfile: Dockerfile
      args:
        - NODE_ENV=dev
    ports:
      - "3002:3000"
    networks:
      - router

  # ──────────────────────────────────────────────────────────
  database:
    container_name: database_service
    build: ./backend/database/
    volumes:
      - database:/db
    tty: true
    env_file:
      - ./.env
    environment:
      # - PGHOST=database -> pour autres containers
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASS}
      - PGDATABASE=${DB_NAME}
      - PGPORT=5432
      - POSTGRES_USER=${DB_SUPERUSER}
      - POSTGRES_PASSWORD=${DB_SUPERPASS}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/db
      # - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    networks:
      - router

  # ──────────────────────────────────────────────────────────
  frontend:
    container_name: frontend
    restart: "no"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:        # ← ajoute si PORT n’est pas déjà fixé côté Vite
      - PORT=4000
    expose:
      - "4000"          # ← reste 4000
    networks:
      - router

  # ──────────────────────────────────────────────────────────
  nginx:
    container_name: nginx
    restart: "no"
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - auth_service
      - game_service
      - user_service
      - frontend
    ports:
      - "4443:443"          # 🔐 HTTPS vers l’hôte
      - "8080:80"            # HTTP for development
    networks:
      - router

# ──────────────────────────────────────────────────────────────
volumes:
  database:

networks:
  router:
    driver: bridge

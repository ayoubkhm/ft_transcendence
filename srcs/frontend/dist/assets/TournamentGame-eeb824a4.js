import{b as k,c as E,p as T}from"./index-c2e6b725.js";const d=document.getElementById("tournament-game-modal"),S=document.getElementById("tournament-game-title"),o=document.getElementById("tournament-matches-list"),$=document.getElementById("tournament-brackets-container"),p=document.getElementById("tournament-game-close");let h=null,i=null;function f(){i&&(i.close(),i=null)}async function x(n,l){if(o)try{const r=await fetch(`/api/tournaments/${n}/running_matches`);if(!r.ok)throw new Error("Failed to fetch running matches");const s=await r.json();if(o.innerHTML="",s.length===0){o.innerHTML='<p class="text-white text-center">No matches are currently running.</p>';return}for(const t of s){const e=document.createElement("div");e.className="bg-gray-700 p-4 rounded-lg flex justify-between items-center";const c=l&&(t.p1_id===l||t.p2_id===l)?`<button class="bg-green-500 text-white px-3 py-1 rounded join-game-btn" data-game-id="${t.id}" data-p1-id="${t.p1_id}" data-p2-id="${t.p2_id}">Join Game</button>`:`<button class="bg-blue-500 text-white px-3 py-1 rounded spectate-btn" data-game-id="${t.id}">Spectate</button>`;e.innerHTML=`
        <div class="text-white">
          <span class="font-bold">${t.p1_name||"TBD"}</span> vs <span class="font-bold">${t.p2_name||"TBD"}</span>
        </div>
        ${c}
      `,o.appendChild(e)}o.querySelectorAll(".join-game-btn").forEach(t=>{t.addEventListener("click",async e=>{const a=e.target,c=a.dataset.gameId,w=a.dataset.p1Id,y=a.dataset.p2Id;if(c)try{const m=await fetch(`/api/game/${c}/start`,{method:"POST"});if(!m.ok)throw new Error("Failed to start game on backend");const{p1Token:I,p2Token:b}=await m.json(),g=localStorage.getItem("userId");g===w?localStorage.setItem("authToken",I):g===y&&localStorage.setItem("authToken",b),localStorage.setItem("currentGameType","tournament"),localStorage.setItem("currentTournamentId",h.toString()),u(),T(c)}catch(m){console.error("Failed to start and join tournament game:",m),alert("Could not join the game. Please try again.")}})}),o.querySelectorAll(".spectate-btn").forEach(t=>{t.addEventListener("click",e=>{const a=e.target.dataset.gameId;a&&console.log(`Spectating game ${a}`)})})}catch(r){console.error("Error fetching running matches:",r),o.innerHTML='<p class="text-white text-center text-red-500">Error loading matches.</p>'}}async function v(n){if(h=n,d){d.classList.remove("hidden"),f();const r=`${window.location.protocol==="https:"?"wss:":"ws:"}//${window.location.host}/api/tournaments/${n}/ws`;i=new WebSocket(r),i.onmessage=t=>{const e=JSON.parse(t.data);e.type==="bracket_update"?v(n):e.type==="tournament-winner"&&(alert(`Tournament Over! Winner: ${e.winner.name}`),u(),navigate("home"))};try{const t=await fetch(`/api/tournaments/${n}`);if(t.ok){const e=await t.json();S.textContent=e.name}}catch(t){console.error("Error fetching tournament details:",t)}k(n,$);const s=localStorage.getItem("userId");await x(n,s?parseInt(s,10):null)}}function u(){d&&(E(),d.classList.add("hidden"),f())}p&&p.addEventListener("click",u);export{u as hideTournamentGame,v as showTournamentGame};
